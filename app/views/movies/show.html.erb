<!--
  This is the 'show' view template for displaying the details of a single movie.
  It is located at 'app/views/movies/show.html.erb'.
  The view presents detailed information about the movie, including its image, title,
  release year, rating, reviews, description, and additional attributes.
  It also provides options for users to write a review and administrative options to edit or delete the movie.
-->

<section class="movie-details">
  <!--
    Display the movie's image.
    - The 'image_tag' helper generates an HTML <img> tag for the given image file.
    - '@movie.image_file_name' provides the filename of the movie's image.
    - This assumes that the image file exists in the 'app/assets/images' directory.
    - If the image file does not exist, a broken image icon may appear unless handled appropriately.
  -->
  <div class="image">
    <%= image_tag @movie.image_file_name %>
  </div>

  <div class="details">
    <!--
      Display the movie title as a heading.
      - '<h1>' is a level 1 heading, indicating the main title of the page.
      - '@movie.title' retrieves the title of the movie from the database.
    -->
    <h1><%= @movie.title %></h1>

    <!--
      Display the release year and rating of the movie.
      - '<h2>' is a level 2 heading for subtitle information.
      - 'year_of(@movie)' is a helper method that returns the release year or 'N/A' if not available.
      - '&bull;' is an HTML entity representing a bullet character (â€¢), used as a separator between the year and rating.
      - '@movie.rating' displays the movie's rating (e.g., 'PG-13').
    -->
    <h2>
      <%= year_of(@movie) %> &bull; <%= @movie.rating %>
    </h2>

    <!--
      Display a link to the reviews for the movie.
      - 'pluralize' helper method correctly pluralizes 'review' based on the number of reviews.
      - '@movie.reviews.size' returns the number of reviews associated with the movie.
      - 'movie_reviews_path(@movie)' generates the URL to the movie's reviews index page.
      - This link allows users to navigate to the reviews page for the movie.
    -->
    <div class="reviews">
      <%= link_to pluralize(@movie.reviews.size, "review"), movie_reviews_path(@movie) %>
    </div>

    <!--
      Display the movie's description.
      - The '<p>' tag represents a paragraph containing the full description of the movie.
      - '@movie.description' retrieves the description text from the movie object.
    -->
    <p>
      <%= @movie.description %>
    </p>

    <!--
      Display additional details about the movie in a table format.
      - The '<table>' element creates a table to organize information in rows and columns.
      - Each '<tr>' represents a table row containing a label and its corresponding value.
      - '<th>' elements define header cells (labels), and '<td>' elements define data cells (values).
    -->
    <table>
      <tr>
        <th>Director:</th>
        <td><%= @movie.director %></td>
      </tr>
      <tr>
        <th>Duration:</th>
        <td><%= @movie.duration %></td>
      </tr>
      <tr>
        <th>Total Gross:</th>
        <!--
          Use the 'total_gross' helper method to display the total gross in a formatted way.
          - If the movie is a flop, it displays 'Flop!'.
          - Otherwise, it formats the total gross as currency.
        -->
        <td><%= total_gross(@movie) %></td>
      </tr>
    </table>

    <!--
      Link to write a new review for the movie.
      - 'link_to "Write Review", new_movie_review_path(@movie)' creates a hyperlink to the new review form for the movie.
      - 'class: "review"' applies a CSS class for styling the link.
      - This encourages users to contribute by writing their own reviews.
    -->
    <%= link_to "Write Review", new_movie_review_path(@movie), class: "review" %>
  </div>
</section>

<!--
  Administrative options to edit or delete the movie.
  - These links are typically shown to users with the appropriate permissions (e.g., admins).
-->
<section class="admin">
  <!--
    Link to edit the movie.
    - 'link_to "Edit", edit_movie_path(@movie), class: "button"' creates a link styled as a button to the edit page for the movie.
  -->
  <%= link_to "Edit", edit_movie_path(@movie), class: "button" %>

  <!--
    Link to delete the movie with a confirmation dialog.
    - 'link_to "Delete", movie_path(@movie), ...' creates a link that sends a DELETE HTTP request.
    - 'data: { turbo_method: :delete }' specifies that the link should use the DELETE method.
    - 'data: { turbo_confirm: "Deletion cannot be undone. Are you sure?" }' prompts the user to confirm the action.
    - This requires Turbo or Rails UJS to handle the method and confirmation data attributes.
  -->
  <%= link_to "Delete", movie_path(@movie), class: "button",
         data: { turbo_method: :delete, turbo_confirm: "Deletion cannot be undone. Are you sure?" } %>
</section>
