<!--
  This is the 'show' view template for displaying the details of a single movie.
  It is located at 'app/views/movies/show.html.erb'.
  The view presents detailed information about the movie, including its image, title,
  release year, rating, reviews, description, and additional attributes.
  It also provides administrative options to edit or delete the movie.
-->

<section class="movie-details">
  <!--
    Display the movie's image.
    - The 'image_tag' helper generates an HTML <img> tag for the given image file.
    - '@movie.image_file_name' provides the filename of the movie's image.
    - This assumes that the image file exists in the assets/images directory.
    - If the image file does not exist, a broken image icon may appear unless handled appropriately.
  -->
  <div class="image">
    <%= image_tag @movie.image_file_name %>
  </div>

  <!-- Display details for a single movie -->
  <div class="details">
    <!--
      Display the movie title as a heading.
      - '<h1>' is a level 1 heading, indicating the main title of the page.
      - '@movie.title' retrieves the title of the movie from the database.
    -->
    <h1><%= @movie.title %></h1>

    <!--
      Display the release year and rating of the movie.
      - '<h2>' is a level 2 heading for subtitle information.
      - 'year_of(@movie)' is a helper method that returns the release year or 'N/A' if not available.
      - '&bull;' is an HTML entity representing a bullet character (â€¢), used as a separator between the year and rating.
      - '@movie.rating' displays the movie's rating (e.g., 'PG-13').
    -->
    <h2>
      <%= year_of(@movie) %> &bull; <%= @movie.rating %>
    </h2>

    <!--
      Display a link to the reviews for the movie.
      - 'pluralize' helper method correctly pluralizes 'review' based on the number of reviews.
      - '@movie.reviews.size' returns the number of reviews associated with the movie.
      - 'movie_reviews_path(@movie)' generates the URL to the movie's reviews index page.
      - This link allows users to navigate to the reviews page for the movie.
    -->
    <div class="reviews">
      <%= link_to pluralize(@movie.reviews.size, "review"), movie_reviews_path(@movie) %>
    </div>

    <!--
      Display the movie's description.
      - The '<p>' tag represents a paragraph containing the full description of the movie.
      - '@movie.description' retrieves the description text from the movie object.
    -->
    <p>
      <%= @movie.description %>
    </p>

    <!--
      Display additional details about the movie in a table format.
      - The '<table>' element creates a table to organize information in rows and columns.
      - Each '<tr>' represents a table row containing a label and its corresponding value.
      - '<th>' elements define header cells (labels), and '<td>' elements define data cells (values).
    -->
    <table>
      <tr>
        <th>Director:</th>
        <td><%= @movie.director %></td>
      </tr>
      <tr>
        <th>Duration (in mins):</th>
        <td><%= @movie.duration %></td>
      </tr>
      <tr>
        <th>Total Gross:</th>
        <!--
          Use the 'total_gross' helper method to display the total gross in a formatted way.
          - If the movie is a flop, it displays 'Flop!'.
          - Otherwise, it formats the total gross as currency.
        -->
        <td><%= total_gross(@movie) %></td>
      </tr>
    </table>
  </div>
</section>

<!-- Buttons to edit and delete a movie -->
<section class="admin">
  <!--
    Link to edit the movie.
    - 'link_to' creates a hyperlink styled as a button.
    - 'Edit' is the link text displayed to the user.
    - 'edit_movie_path(@movie)' generates the URL to the edit page for the movie.
    - 'class: "button"' applies a CSS class for styling, allowing the link to look like a button.
  -->
  <%= link_to "Edit", edit_movie_path(@movie), class: "button" %>

  <!--
    Link to delete the movie with a confirmation dialog.
    - 'Delete' is the link text displayed to the user.
    - 'movie_path(@movie)' generates the URL for the movie's show page, which is also used for the delete action.
    - 'data: { turbo_method: :delete }' specifies that the link should send a DELETE HTTP request instead of GET.
    - 'data: { turbo_confirm: "Deletion cannot be undone. Are you sure?" }' prompts the user for confirmation before proceeding.
    - 'class: "button"' applies a CSS class for styling.
    - This requires that the application includes the necessary JavaScript (Turbo or UJS) to handle 'data-turbo-method' attributes.
    - The confirmation dialog helps prevent accidental deletions by asking the user to confirm their action.
  -->
  <%= link_to "Delete", movie_path(@movie), class: "button",
         data: { turbo_method: :delete, turbo_confirm: "Deletion cannot be undone. Are you sure?" } %>
</section>
